Join me on Developer Thoughts (https://egvijayanand.in/), an exclusive blog for articles on .NET MAUI and Blazor.

What's new in ver. 6.4.0:
-------------------------
Templates updated to support .NET 10 Preview 6.

v6.3.0

Templates updated to support .NET 10 Preview 5.

v6.2.0:

Templates updated to support .NET 10 Preview 4.

v6.1.0

Templates updated to support .NET 10 Preview 3.

v6.0.0:

Support for creating .NET Blazor Hybrid Window Desktop projects on .NET 10 Previews.

For this, have introduced an additional option to the framework parameter - net10.0

Note: The default value for the framework parameter remains as net9.0, which means to create a project for .NET 10, an explicit value of net10.0 is to be passed.

dotnet new winforms-blazor -o MyApp -f net10.0

dotnet new wpf-blazor -o MyApp -f net10.0

v5.0.0:

Templates updated to support .NET 9 Stable channel release.

The default value for the Framework parameter is now set to net9.0

So by default, the project command generates a .NET 9 project.

dotnet new winforms-blazor -o MyApp

dotnet new wpf-blazor -o MyApp

To create a .NET 8 project, explicitly pass the value for the Framework parameter.

dotnet new winforms-blazor -o MyApp -f net8.0

dotnet new wpf-blazor -o MyApp -f net8.0

Removed out-of-support versions (.NET 6 and 7).

v4.5.0:

Templates updated to support .NET 9 RC2 release.

v4.4.0:

1. Templates updated to support .NET 9 RC1 release.

2. Introduced an option to add a reference to the CommunityToolkit.Mvvm NuGet package to work with MVVM.

-imt | --include-mvvm-toolkit - Default value is false

dotnet new winforms-blazor -o MyApp -imt

dotnet new wpf-blazor -o MyApp -imt

v4.3.0:

1. Templates updated to support .NET 9 Preview 7 and the latest .NET 8 release.

2. Introduced an option to support the XML-based solution file (slnx) format.

This would be an explicit option since the SLNX feature is currently in the preview stage and is only supported on VS2022.

-slnx | --use-slnx - Default value is false

dotnet new winforms-blazor -o MyApp -slnx

dotnet new wpf-blazor -o MyApp -slnx

v4.2.0:

1. Introduced using the NuGet CPM feature from within Visual Studio IDE.

2. Templates updated to support .NET 9 Preview 5 and latest .NET 8 release.

v4.1.0:

Templates updated to support .NET 9 Preview 4 and latest .NET 8 release.

v4.0.0:

1. Support for creating .NET Blazor Hybrid projects on .NET 9 Previews.

For this, have introduced an additional option to the framework parameter - net9.0

Note: The default value for the framework parameter remains as net8.0, which means to create a project for .NET 9, an explicit value of net9.0 is to be passed.

dotnet new winforms-blazor -o MyApp -f net9.0

dotnet new wpf-blazor -o MyApp -f net9.0

2. WPF Blazor namespace updated to URI based.

v3.6.1:

Updated the WinForms and WPF Blazor hybrid NuGet package reference to .NET MAUI 8 SR1 (8.0.6)

For more details, check this article:

https://egvijayanand.in/2024/01/18/dotnet-maui-8-service-release-1/

v3.6.0:

Source file namespace for BlazorWebView item templates automatically resolved from root namespace.

v3.5.0:

Templates updated for .NET 8 RTM.

Preview feature is now stable.

Note: For now, the CPM feature is only supported on CLI.

v3.5.0-preview.1:

Introduced an option for NuGet Central Package Management in CLI project templates.

-cpm | --central-pkg-mgmt - The default value is false.

dotnet new winforms-blazor -o MyApp -cpm

dotnet new wpf-blazor -o MyApp -cpm

v3.4.0

Templates updated for .NET 8 RC2.

v3.3.0:

Templates updated for .NET 8 RC1.

The default value for the Framework parameter (--framework / -f) is now updated as net8.0

v3.2.4:

Templates updated for .NET 8 Preview 7.

v3.2.3:

Templates updated for .NET 8 Preview 6.

v3.2.2:

Templates updated for .NET 8 Preview 5.

v3.2.1:

Templates updated for .NET 8 Preview 4.

v3.2.0:

All the preview features have reached stable.

Templates updated for .NET 8 Preview 3.

Item template for the following:

Windows Form with BlazorWebView:

dotnet new winforms-bwv -n MyForm -na BlazorApp

WPF Window with BlazorWebView:

dotnet new wpf-bwv -n MyWindow -na BlazorApp

Note:

Ensure the project dependencies are restored before creating Item from these templates.

While working with .NET 7 or higher SDK, the namespace parameter in short notation needs to be passed as -p:na (i.e., it needs to be prefixed with -p:).

v3.2.0-preview.2:

An option to abstract the Razor components as a separate Razor class library.

-rcl | --razor-class-library - Default value is false

dotnet new winforms-blazor -n MyApp -rcl
(or)
dotnet new winforms-blazor --name MyApp --razor-class-library

dotnet new wpf-blazor -n MyApp -rcl
(or)
dotnet new wpf-blazor --name MyApp --razor-class-library

v3.2.0-preview.1:

Template restructured to follow the same sample as other App Models.

v3.1.0:

1. Added the open-iconic artifacts to the solution

2. While targeting .NET 8, the StartPath property is set to load a Razor component other than the one defined with default route address of '/'

v3.0.3:

1. Added the option to allow for restore/build action on Windows projects on non-Windows platforms.

-ewt | --enable-windows-targeting

2. In Windows Forms solution, the Router component is renamed as Main.razor for better interop with other AppModels.

dotnet new winforms-blazor -ewt

dotnet new wpf-blazor -ewt

v3.0.2:

Added the option to skip creating a solution file.

-nsf | --no-solution-file - Default value is false

dotnet new winforms-blazor -nsf

dotnet new wpf-blazor -nsf

v3.0.1:

Templates updated for .NET 8 Preview 2.

v3.0.0:

Templates updated for .NET 8 Preview 1.

Supported values for target framework parameter, can be specified with --framework / -f

net6.0
net7.0 (the default value)
net8.0

Examples:

dotnet new winforms-blazor -f net8.0 -o BlazorWinForms1

dotnet new wpf-blazor -f net8.0 -o BlazorWpf1

v2.2.0:

Templates updated for .NET 7 service release.

The Blazor hybrid package version is updated as a wildcard so that the latest stable version will be pulled from the NuGet repository.

.NET 7 - 7.0.*

.NET 6 - 6.0.*

v2.1.1:

A little housekeeping to improve the reliability of the templates.

v2.1.0:

Templates updated for .NET 7 GA release.

Blazor desktop templates for Windows Forms and WPF.

Currently targeting .NET 6 / 7 and the corresponding .NET MAUI release.

A parameter named framework has been introduced that takes either net6.0 or net7.0 as its options (with net7.0 being the default value).

dotnet new winforms-blazor --framework net6.0

dotnet new winforms-blazor -f net7.0

dotnet new wpf-blazor --framework net6.0

dotnet new wpf-blazor -f net7.0

Unified template now also available as a VS extension.

https://marketplace.visualstudio.com/items?itemName=egvijayanand.blazor-desktop-templates

Take a look at this Blazor article for working with these templates:

https://egvijayanand.in/2021/11/13/net-maui-blazor/
